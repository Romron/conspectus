Источники:
   Лаврик Д noname tracker
   https://youtu.be/jU88mLuLWlk    см. так же    https://fls.guru/gulp.html
   https://ru.manpages.org/glob/7
   Документация Gulp на русском
      https://webdesign-master.ru/blog/docs/gulp-documentation.html#dest 
      https://gulpjs.su/docs/ru/getting-started/quick-start     
   

Термины:

Смежные области:
   node.js



----------------------- ТЕОРИЯ start -----------------------  
   для сохранения исходной структуры папок в целевой дериктории 
      app.gulp.src(app.path.src.php, { base: app.path.srcFolder })
         { base: app.path.srcFolder } параметр который сохраняет структуру папок из исходной директории при копировании файлов. 


   gulp.task('task_name', function(){ });
      метод класса gulp который запускает модули которые возвращают промисы


----------------------- ТЕОРИЯ end ------------------------- 


----------------------- Практика start ---------------------
Алгоритм использования:
   становить на каспьютер node, npm nvm - желательно
   установить глобально:
      gulp-cli    интерфейс командной строки для запуска тасков галпа из gulpfile.js
         npm gulp-cli -g
   в папке проэкта 
      npm init 
         ускоренная установка дабавить -y ответить на все вопросы да
      npm i gulp -D
Модули      https://www.npmjs.com/
   необходимые 
      npm install del -D      // для использования import нужно установливать npm i del@6.1.1
      npm i @babel/preset-env @babel/register -D         // для решения проблемы обратной совместимости  https://babeljs.io/docs/usage
   нужные для разроботки
      npm i gulp-file-include -D
      npm gulp-concat  i -D     // соединяет указанные css файлы в алфовитном порядке(!) в один по этому нужно передавать масив соединяемых файлов в определённом порядке
      npm gulp-group-css-media-queries i -D     // нужен тогда кагда отключен gulp-concat например для less файлов 
      npm gulp-autoprefixer i -D
         настойка    см docs
            задать процент использования браузера    "browsersList":">0,5";
               либо в обдельном файле
               либо в package.json в ключе browsersList 
      npm gulp-clean-css -D     // минимизирует и оптимизирует CSS код
         настройка 
            задаётся уравень оптимизации  рекомендуется думул 1
      npm gulp-sourcemaps i -D      // генерирует карту по которой соотносятся исходные и минимизированные файлы
      npm browser-sync i -D
      npm gulp-if i -D     // для условного управления потоком данных т.е. pipe будет выполнятся только когда первый параметр true 
      npm npm gulp-less i -D
      npm i smart-grid -D       // 213 загрузок за неделю!  автор модуля Д. Лаврик
      npm i gulp-version-number -D     // предотврашает кеширование файлов браузером
      npm i gulp-webp-html-nosvg -D    // оборачивает тег img в тег <picture>  
      npm i -D gulp-webpcss    // в зависимости об браузера(!) картинки в файле стилей либо в фотмате webp либо обычные требует дополнительного js кода 
      npm i -D webp-converter@2.2.3    // необходима именно эта версия(?) для работы gulp-webpcss(?)
      npm i gulp-plumber -D    // оброботка ошибок
      npm i gulp-notify -D    // выводит сообщение об ошибках
      npm i sass -D
      npm i gulp-sass -D
      npm i gulp-rename -D
      npm i webpack-stream -D    // запускает webpack как поток для взаимодействия с gulp.  для сборки js файлов в один
      npm i webpack -D 
      npm i gulp-webp -D
      npm i -D gulp-imagemin@7.1.0  // для win 7
      npm i gulp-newer -D     // включеет в поток только навые файлы т.е. те которыж ещё нет в папке с результатом
      npm i gulp-fonter -D
      npm i gulp-ttf2woff2 -D
      npm i gulp-svg-sprite -D
      npm i gulp-zip -D
      npm i vinyl-ftp -D      // для отправки файлов по ftp при каждом обновлении в gulp.watch(path.watch.path_files, task_name) заменить task_name gulp.series(task_name,ftp)
      npm i gulp-util -default   // устаревший(!?) но работает
      npm i gulp-tap -D       // выполняет разнообразные операции над файлами в потоке
      npm i gulp-filelist -D       // сохраняет список обработаных файлов в отдельный json файл 
      npm i php-serialize -D
     


   могут пригодится
      npm i gulp-replace      // авто замена по регулярным выражениям   
   необходимые для продакшина
      npm install normalize.css     // подключение непосредственно в main.less первой строкой   @import (less) 'normolize.css'; /*будет искать файл normalize.css в папке css если ненайдёт то искать будет в папке node_modules*/
   
Стандартная структура проэкта
   build
   src
      css
      img
      fonts
      scripts
      index.html
   gulpfile.js
Минимальная базовыя конфигурация gulp для вёрстки   в файле gulpfile.js
   /*
      Для начала сборки проэкта
         режим разработки  gulp start
         режим готового продукта  gulp start --prod
   
   */
   
   const gulp = require('gulp');
   const del = require('del');
   const concat = require('gulp-concat');
   const gcmq = require('gulp-group-css-media-queries');
   const autoprefixer = require('gulp-autoprefixer');
   const cleanCSS = require('gulp-clean-CSS');
   const sourcemaps = require('gulp-sourcemaps');
   const browserSync = require('browser-sync').create();
   const gulpif = require('gulp-if');     // возможны разные условия см: https://www.npmjs.com/package/gulp-if    и  https://www.npmjs.com/package/gulp-if-else
   const smartGrid = require('smart-grid');   
   const path = require('path');    // для очистки кеша файла настроек smartgrid.js    в node установлен по умолчанию

   const isDev = !isProd;     // всегда противоположно isProd   
   const isProd = process.argv.includes('--prod');    // теперь если в консоли вводить любую команду с флагом --prod isProd будет true иначе false   
   const isLESS = process.argv.includes('--less');  

   const arrSccFiles = [
      // порядок файлов имеет значение!
   ]

   function clean(){
      return del('./build/*');
   }

   function html(){
      return gulp.src('./src/**/*.html')     // т.к. методы галпа возвращают промисы return обязательно

         что то 

         .pipe(gulp.best('./build')
         .pipe(browserSync.stream())      // отслеживает изменение файлов
         )
   }

   function styles(){
      return gulp.src(gulpif(isLESS,'./src/css/main.less','./src/css/**/*.css'))     // т.к. методы галпа возвращают промисы return обязательно;  т.к. LESS мобирает файлы сам (протестить!)
         .pipe(gulpif(isDev, sourcemaps.init()))      // // обязательно до всех преобразований
         .pipe(gulpif(isLESS, less(), concat('arrSccFiles, main.css'))         // isLESS == true использовать less() иначе concat()
         .pipe(gulpif(isLESS, gcmq())         // isLESS == true использовать gcmq т.к. отключён concat()
         .pipe(autoprefixer())
         .pipe(gulpif(isProd, cleanCSS({ leve:1 })))


         .pipe(gulpif(isDev, sourcemaps.write(map_file)))     // обязательно после всех преобразований  map_file - фаил с картой указывать необязательно
         .pipe(gulp.best('./build')
         .pipe(gulpif(isDev, browserSync.stream()))      // отслеживает изменение файлов
         )
   }

   function grid(done){    // настройка в отдельном файле smartgrid.js  см в конспекте Вёрстка NEW.txt    https://www.npmjs.com/package/smart-grid?activeTab=explore
      delete require.cache[path.resolve('./smartgrid.js')];    
      let options = require('./smartgrid.js');     // кеширует результат первого запуска
      smartGrid('./src/css');    
      done();        // работает в синхронном режиме по этому нужна заглушка в виде калбек ф-ции done()
   }

   function watch(){
      browserSync.init({
        server: {
                  baseDir: "./build/"     // корневая папка сервера
            }
         });
      gulp.watch('./src/**/*.*', styles)
      gulp.watch('./smartgrid.js', grid)
   }

   let assemble = gulp.parallel(task_scc, task_html, task_nema_3, task_nema_4);      // собрать проэкт задействуя все манипуляции с файлами
   let build = gulp.series(clean,assemble);     // удалить файлы прошлой сборки выполнить новую сборку
   let start = gulp.series(build,watch); 

   gulp.task('dev', watch);
   gulp.task('build', build);
   gulp.task('assemble', assemble);
   gulp.task('grid', grid);      // для создания сетки проэкта используется один раз

Команды, методы, gulp 
   gulp.src('path_to_file(s)')      // формирует поток данных. Попрасту перемещает файлы из указанного места   возвращает промис
   .pipe(gulp_comand)     // регестрирует действие над данными в потоке    возвращает промис
   gulp.best('./build')    // устанавльвает место назначение перемещаемых данных для того что бы сбереч структуру вложенных папок указать только корневой каталог
   gulp.task('task_nema', name_func);      // регестрирует задачи которые будут вызыватся из командной строки
   gulp.parallel(task_nema_1, task_nema_2, task_nema_3, task_nema_4);      // запускает все задачи паралельно
    gulp.watch()    // наблюдать за изменением в указанных файлах, при добавлении новых файлов перезапустить gulp 
Флаги команд консоли
   вся информация о текущем node процесе в пепеменной process        https://nodejs.org/docs/latest/api/process.html#processargv
      process.argv возвращает массив, содержащий аргументы командной строки, переданные при запуске процесса Node.js
         console.log(process.argv);
   предустановленные 
   кастомные
      устновить свой флаг любой команде в консоли     process.argv.includes('--my_flag');

Запуск обработки проэкта
   непосредственно галпом
      gulp           // запустит task с именем default  
      gulp task_nema 
   скриптом npm   используется в тех случиях когда команда запуска gulp слишком длинная например много ключей
      в файле package.json
         "scripts" : {
            "script_name" : "любой код для выполнения в консоли",
            "dev" : "gulp start", 
            "devL" : "gulp start --less", 
            "prod" : "gulp start --prod",
         }
         npm run script_name

Маски именования файлов
   *.html
   **/*.html   во всех вложенных папках

Заметки
   обрабатываются только те файлы каторые перемещаются
Нельзя:
   называть папку для установки GULP называть GULP или так как называются модули галпа
----------------------- Практика end -----------------------



----------------------- Проблемы -- решения start ---------
import в GULP 
   описоние
      по умолчанию в GULP деректива import из ES6 не работает!!
      возникает ошибка  
         SyntaxError: Unexpected identifier  на строку с import gulp from "gulp";
   решение 1    https://github.com/gulpjs/gulp#use-latest-javascript-version-in-your-gulpfile     
      Rename gulpfile.js to gulpfile.babel.js
      Run this command:
         npm install --save-dev @babel/register @babel/core @babel/preset-env
      Add a .babelrc file to the root folder of your project with the following code in it:
         {
         "presets": [
            "@babel/preset-env"
         ]
         }
   решение 2   https://stackoverflow.com/questions/39436322/node-js-syntaxerror-unexpected-token-import     https://www.npmjs.com/package/esm
      не проверял 


----------------------- Проблемы -- решения end -----------








----------------------- ЧЕРНОВИК -----------------------








