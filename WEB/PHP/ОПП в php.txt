Нужно знать:
   $thise
      контекст данного экземпляра класса
   Гетеры
   Сетеры




Объекты в PHP есть не что иное как переменные абстрактного типа данных (который задаёт программист). 
Класс -- каркас,шаблон, чертёж сущьности
   class Human{
      pablic $name;  // значение по умолчанию не задано -- автоматически устанавливается в NULL
      pablic $surname;   // значение по умолчанию не задано -- автоматически устанавливается в NULL
      pablic $age = 12; // значение по умолчанию задано
   }
Объект -- экземпляр класса -- сущьность созданная из класса фактически отдельный вид данных
   $c_1 = new Human();
   $c_2 = new Human();
   $c_3 = new Human();
   и всё это разные сущьности!! т.е. занимают разные ячейки памяти
Метод -- функция класса или внутри класса
   создать метод
      class Human{
         pablic $name;
         pablic $surname;
         pablic $age;

         pablic function Name($name){
            return 'Hello ' . $name;
         }
      } 
   вызвать метод 
      $c_2 = new Human();
      echo $c_2 -> Name('Vasy');
Области видимости
   pablic
      видимо внутри и с наружи класса
   rivate
      видимо только внутри класса
   protected
      видимо внутри класса а так же внутри классов наследников
Свойства -- характеристика, данные объекта
   создать свойство   
      class Human{
         pablic $name;
         pablic $surname;
         pablic $age;
      } 
   изменить / получить свойство
      для того что бы менять / получать свойства только в одном экземпляре класса 
         обращаясь на прямую к свойвтву:
            $c_1 = new Human; 
            записать свойство
               $c_1 -> name = 'Alex';
               $c_1 -> surname = 'Petrov';
               $c_1 -> age = 32;
            прочитать свойство
               echo $c_1 -> name;
               echo $c_1 -> surname;
               echo $c_1 -> age; 
         будем обращаться сразу ко всем экземплярам класса 
            т.к.
               классы передают данные всегда по ссылке
               подробнее см. "Передача данных"
      в классе прописывают для каждого свойства специальные методы, ф-ции, setName() getName()
      class Human(){
         private $name;
         private $surname;
         private $age;

         pablic function setName($name){
            // ... возможные проверки
            $this->name = $name;
         }
         pablic function setSurname($surname){
            // ... возможные проверки
            $this->surname = $surname;
         }

         pablic function getName(){
            //... что то
            return $this->name;
         }
         pablic function getSurname(){
            //... что то
            return $this->surname;
         }
      }


Операции с объектами
   Передача данных
      по значению
         $a = 1;
         $b = 2;
         $c = $a + $b;
         echo $c;  // 3
      по ссылке
         $a = 1;
         $b = &a; // ссылка на ячейку памяти которую занимает переменная $а
                  // т.е. всё что попадает в переменную $b попадает в ячейку памяти переменной $а
         $b = 4;
         $c = $a + $b;
         echo $c;  // 8
      классы всегда по ссылке!!!
         $a = new Human;
         $b = $a; // второй класс не создан!!  передача по ссылке!!!!
   Сравнение объектов
      $a_1 = new Human;
      $a_2 = new Human;
      $a_1 == $a_2 // не строгое сравнение   сравниваются только свойства   в результате TRUE
      $a_1 === $a_2 // строгое сравнение в результате FALSE т.к. у разных экземпляров класса разные внутрение идентификаторы


