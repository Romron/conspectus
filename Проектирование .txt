

Отношения между классами 
	Наследование (обобщение):
		статическая связь
		Обозначение: B "is" A
		Механизьм повторного использования 
		кода ли бо данных родительского 
		класса в дочернем
	Асоциация:
		динамическая связь
		Обозначени: B "uses" A
		синоним - зависимость
		механизьм зависимости между объектами 
		который позволяет одному объкту действовать от имени другого
		т.е. один объект использует (взаимодействует с) 
		другой (другим)
		Пример:
			Учиник ходит в школу т.е. 
			использует школу для обучения, 
			взаимодействует со школой для получения знаний
		Формы, усиленые(?), асоциаций:
			Агрегация
				Обозначение: B "has" A   
					при этом 
						В-контейнер
				Методика создания нового класа-контейнера
				из уже существующих классов
				путём их включения
				т.е. формируется отношение ЧАСТЬ-ЦЕЛОЕ
				При этом:
					Объекты равноправны
					Объекты могут существовать независимо
						т.е. уничтожение контейнера 
						не приведёт к уничтожению его содержимого
					Один и тот же объект может включаться в разные контейнеры
				Пример: 
					Професора и кафедры. 
						кафедра - контейнер
							который преобретает новый ф-ционал 
							при принятии нового професора
						при ликвидации кафедры професора продолжают существовать без изменений
						и могут быть использованы в других кафедрах
						при этом один и тот же професор может состоять одновременно на многих кафедрах
			Композиция
				Обозначение: B "owns" A   
					при этом 
						В-контейнер
				Более строгий вариант агрегирования
					Включаемый объект А может существовать только как часть контейнера В
					Уничтожение контейнера приведёт к уничтожению содержимого
				Пример:
					Университет - факультеты
						факультет без университета существовать не может и то же будет разрушен
	Зависимость
		Каждая асоциацию - зависимость
		Не каждая зависимость - асоциация
			В Импортирует А
			В Уточняет А
			В Инстанцирует А
			и др.


ПАТЕРНЫ (шаблоны) проэктирования
	Типичные решения 
		часто встричающихся задач проэктирования
	Формализируют объектно ориентировоную систему
	Упрощают сопровождение програмных систем
	Высокоуровневые абстракции а не алгоритмы
	Описываются с помощью языка UML
		унифицированный язык графического описания 
		для объектного моделирования
		Принятые обозначения UML
			Класс
				примоугольник 
					разделённый на три части горизонтальными линиями
						первая часть - имя
						вторая часть - атрибуты (свойства)
						третья часть - операции (методы)
				типы видимости:
					- privatу (частный)
					# protected (защищённый)
					+ public (общий)
			Виды отношений (связей)
				Стрелки
					от родителя к наследнику
					для интерфейсов(?) стрелка будет пунктиром
				Наследование
					остриё ввиде треугольника
					в начале стрелки ничего нет
				Асоциация:
					остриё ввиде расходящихся лучей
					в начале стрелки ничего нет
				Агригация:
					остриё ввиде расходящихся лучей
					в начале стрелки не закрашеный ромб
				Композиция:
					остриё ввиде расходящихся лучей
					в начале стрелки закрашеный ромб
				Зависимость
					пунктирная стрелка
					остриё ввиде расходящихся лучей
			Множественность асоциаций 
				кол-во объектов с которыми установлена связь
				указываеться цыфрами над стрелками
					цыфра возле источника
					цыфра возле цели 
					* 
						возле источника
							любое число
					* 
						возле цели
							1 и более
	Класификация
		Приминимость
			объекты
				описывают отношения между объектами
				виды отношений
					ассоциации
			классы
				описывают отношения между классами и их подклассами
				виды отношений
					наследование
					реализация
		Цель
			порождающие
				организовывают процесы создания объекта
			структурные
				организовывают правильные(?) структуры из объектов и классов
			поведеньческие
				организовывают устойчивое взаимодействие между объектами или классами
				через правильное формирование информационных потоков

	Singletone
		гарантирует что у класса может быть только 1 экземпляр 
		(или строго ограниченное кол-во экземпляров)
		класификация:
			порождающий
			к объектам
		Принцыпиальная схема:
			Singletone проверяет количество уже созданных объектов этого класса
			если
				количество уже созданных объектов этого класса 
				больше установленного пределла
			то
				новый объект не создаёться
	Builder
		Позволяет создавать сложные объекты по шагово
		клиент не знает 
			последовательность шагов в процесе строительства
			внутренее устройство строящегося объекта
			т.е. 
				в результате одного и того же процеса конструирования 
				могут получиться объекты с различным внутреним устройством
		класификация:
			порождающий
			к объектам


