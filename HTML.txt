
проверка структу страницы:  https://gsnedders.html5.org/outliner/


Необходимые компаненты сайта
	страница авторизации 
	страница 404
		шаблон
	карта сайта
		шаблон
	главная страница
		шаблон
	шаблоны страниц 
		статический 
			по умолчанию, шаблон страницы выполняет одну фиксированную функцию 
				показ карты сайта 
				удаление  боковой панели для изображения страницы на всю ширину окна
				и д.р.
		динамический
	шаблоны записей
	локализация
	пагинация

Семантические теги  !!!!
	предназначены для пояснения поисковым роботам четкой роли контента на странице
		т.е. несут смысловую нагрузку для поисковых систем
	отображаються настранице также как и обычные <div>
	не имеют стилей по умолчанию

	минимальный набор любой страницы:
	<html>, <head> и <body>
	 в документе теги head и body могут быть использованы только один раз
	
	<html> 
		очень важен атребут lang=""
			атрибут lang можно задавать любым тегам если нужно уточнить
			на каком языке написан текст внутри тега. 
			но если задать его тегу <html>, то действие атрибута 
			распространится на весь документ целиком
	<head>
		предназначен для хранения служебной информации о странице
		располагается первым в теге <html>, сразу перед <body>
		содержит:
			тег <title> обязателен для поисковых роботов
				должен описывать содержимое документа в целом
				этот текс отображается
					в результатах поиск
					браузерных закладках
			теги подключения скриптов
	<meta ....  >
		одиночный
		распологаеться внутри тега <head>
		сообщает браузеру, поисковим роботам, другим устройствам служебную информацию -- метаинформацию
		<meta name="description" content=""/>
			это мета-описание страницы сайта. 
			действующий и достаточно эффективный способ влияния на представление сайта в результатах поиска
			содержимое параметра content используется при формировании сниппета для описания сайта в поиске
		<meta name="keywords" content="">
			отвечает за ключевые слова
		<meta charset="название кодировки">
	<nav></nav>
		для оформления блока навигации по сайту
		навигацию желательно оформлять єлементами
		пагинация страниц
	<main></main>
		обрамляет основное содержимое страницы 
		то что НЕбудет повторяться на другх страницах сайта
			т.е. сюда нельзя помещать сайтбары, хедеры, футеры и т.п.
		спецификация не допускает использование на одной странице более одного тега <main>
	<article></article>
		обрамляет блоки контента, которые могут быть вынуты из контекста страницы
		и использованы отдельно в другом месте  т.е.  независимый раздел
		пример: 
			статьи
			карточки фильмов или товаров
			превью и т.п.
		може иметь независимую от остального документа, иерархию заголовков
	<header></header>
		в отличии от HTML4 в HTML5 применим к блокам
		обрамляет вводный контент блока
		может содержать 
			заголовки 
			логотип
			имя автора
			дата публикации
			прочее
		не создает новый раздел в структуре HTML-документа
	<footer></footer>
		в отличии от HTML4 в HTML5 применим к блокам
		обрамляет завершающий контент блока
		например
			сноски
			ссылки
			выписки
			правовая инфа
			контакты
			прочее
		может содержать 
		элемент <address>
	<aside></aside>
		обрамляет раздел страницы, не связанный напрямую с основным контентом страницы
		например
			боковые панели
			рекламные блоки
			ссылки на архив
			прочее
	<section></section>
		обрамляет крупные смысловые разделы блока контента 
		которые не могут расмативаться отдельно от контента
		допускается вкладывать один элемент <section> внутрь другого
		може иметь независимую от остального документа, иерархию заголовков
	<h1></h1> 
		используется для указания заголовка контейнера в котором он находится
		формирует тектовую структуру блока
		это может быть header, section, article и т.д.
		т.е. на странице возможно несколько h1 
			до HTML5 h1 на страницемог быть только один
	<p></p>
		параграф в HTML структурная, а не смысловая сущность.
		группирует элементы с фразовым типом содержимого
			на пример
				блоки текста
				изображения
				ссылки
				поля ввода
				прочее
		формирует более мелкую, чем заголовок, текстовую структуру
		внутри абзаца не могут располагаться крупные структурные теги
		заголовки, формы, списки, таблицы. 
		когда браузер встречает неподходящий тег внутри <p>
		он «выбрасывает» этот тег из <p>.

Flex
	технология создания адаптируемых блоков Flexbox
	особенности
		вертикальное выравнивание внутри родителя
		разнообразное распределение пространства 
			между соседями внутри контейнера
		выравнивание колонок по высоте 
			вне зависимости от наполнения
	flex-модель
		flex
			Термины:
				Главная ось (main axis)
					направление задаёться свойством flex-direction
					вдоль этой оси располагаються все Flex элементы
					Начало и конец этой оси называются main start и main end.
				Поперечная ось (сross axis)  
					проходит перпендикулярно Flex элементам
					начало и конец этой оси называются cross start and cross end.
				flex container
					родительский элемент 
					в котором установлено
						display: flex или 
						display: inline-flex
				flex items
					дочерние элементы флекс контейнера
		-inline-flex
			блоки распологаються как строчные
	Свойства
		позиционирование flex-блоков
			flex-direction
				устанавливается для flex-контейнера
				задаёт направление главной оси
					по умолчанию
						flex-direction: row;
				flex-direction: row;
					Главная ось направлена так же, как и ориентация текста, 
						по умолчанию слева направо
				flex-direction: column
					Главная ось располагается вертикально и направлена сверху вниз
				flex-direction: row-reverse;
					то же что и row только в противоположном направлении
				flex-direction: column-reverse
					то же что и column только в противоположном направлении
			flex-wrap
				устанавливается для flex-контейнера
				устанавливает возможность при необходимости(!) 
					распологать flex-элементы в несколько строк
						по умолчанию
							flex-wrap: nowrap;
				при этом высота контейнеров выравнивается по максимальному
				nowrap
					флексы выстраиваются в одну линию
						т.е. перенос на другую строку запрещён
				wrap
					флексы выстраиваются в несколько строк
						если ширины контейнера не хватает(!)
					направление задаётся свойством flex-direction
				wrap-reverse
					то же что и wrap, но в сторону противоположную flex-direction
			flex-flow
				сокращённая форма записи
					flex-flow: row wrap;
						аналог
					flex-direction: row;
					flex-wrap: wrap;				
		размеры flex-блоков
			ширина
				устанавливаються пропорционально(!) от всего доступного размера	
				flex-grow
					коэффициент расширения флекса в контейнере 
					задаёт, насколько элемент будет увеличиваться  
					по отношению к другим флексам			
				flex-shrink
					устанавливается для элемента
					коэффициент сжатия флекса в контейнере 
					задаёт, насколько элемент будет уменьшаться 
					по отношению к другим флексам
				flex-basis
					определяет первоначальный размер элемента
						меньше которого элемент быть не может
					в px, mm, pt или в процентах
					размер вычисляется относительно родителя
					отрицательное значение недопустимо
			высота
		выравнивание	
			вдоль основной оси
				justify-content
					устанавливается для контейнера
					устанавливает правила распределения пространства 
						вокруг элементов
					выполняется после того как 
						будут применены размеры и автоматические отступы
							за исключением ситуации, когда по крайней мере у одного элемента 
								flex-grow больше нуля
								при этом не остаётся никакого свободного пространства 
					по умолчанию
						flex-start
					flex-start
						Флексы прижаты к началу строки
					center
						Флексы выравниваются по центру строки
					space-between
						Флексы равномерно распределяются по всей строке 
							при этом
									первый и последний элемент прижимаются к соответствующим краям контейнера
					space-around
						Флексы равномерно распределяются по всей строке
							при этом 
								пустое пространство перед первым и после последнего элементов 
								равно половине пространства между двумя соседними элементами
					space-evenly
						Флексы распределяются так, что
						расстояние между любыми двумя соседними элементами
						а также перед первым и после последнего
						было одинаковым
			вдоль поперечной оси
				align-items 
					устанавливается для контейнера
					устанавливает расположение элементов НЕ СТОРОК 
						вдоль поперечной оси
					по умолчанию
						align-items: stretch;	
					align-items: flex-start
						флексы выравниваются в начале поперечной оси контейнера
					align-items: flex-end
						флексы выравниваются в конце поперечной оси контейнера
					align-items: center
						флексы выравниваются по линии поперечной оси
					align-items: baseline
						флексы выравниваются по их базовой линии 
							базовой линии это 
								воображаемая линия проходящая по нижнему краю букв
					align-items: stretch	
						флексы растягиваются таким образом, чтобы 
						занять всё доступное пространство контейнера			
				align-content
					устанавливается для контейнера
					устанавливает выравнивания СТРОК (рядов) 
						элементов внутри контейнера вдоль поперечной оси 
						при наличии свободного пространства
					по умолчанию
						align-content: stretch;	
					flex-start
						строки располагаются в начале поперечной оси. Каждая следующая строка идёт вровень с предыдущей.
					flex-end
						строки располагаются начиная с конца поперечной оси. Каждая предыдущая строка идёт вровень со следующей.
					center
						строки располагаются по центру контейнера.
					space-between
						строки равномерно распределяются в контейнере и расстояние между ними одинаково.
					space-around
						строки равномерно распределяются таким образом, чтобы пространство между двумя соседними строками было одинаковым. Пустое пространство перед первой строкой и после последней строки равно половине пространства между двумя соседними строками.
					space-evenly
						строки распределяются равномерно. Пустое пространство перед первой строкой и после последней строки имеет ту же ширину, что и у других строк.
					stretch
						строки равномерно растягиваются, заполняя свободное пространство.
				align-self 
					устанавливается для элемента
					выравнивает флекс-элементы текущей строки,
						переписывает значение align-items
					по умолчанию
						align-items: auto;	
					!! Если margin в поперечной оси выставлен в auto, то align-self
				
		порядок вывода флексов
			order
				устанавливается для элемента
				устанавливает порядок вывода флексов внутри флекс-контейнера
					Элементы располагаются согласно значениям свойства order от меньшего к большему
					от начала главной оси
						При равных значениях order 
							элементы выводятся в том порядке
							в каком они появляются в исходном коде
				по умолчанию			
					order: 0;
				допускаются 
					-1 
						тогда этот элемент отобразится раньше 
						элемента с order: 0;

Способы выравнивание блока по центру экрана
	Подробнее:	https://www.youtube.com/watch?v=FdcwNozRkqE
	1.	элементу:
		position: absolute;
		# погоризонтали
			left: 0;
			right: 0;
			margin: 0 auto;
		# по вертикали:
			top: calc(50% - половина высоты элемента)
		# если высота неизвестна
			top: 50%;
			transform: translate(0, -50%)







