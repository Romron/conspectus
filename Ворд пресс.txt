
Иерархия шаблонов		незакончено!
	определяет какой из файло будет формировать ту или иную страницу 
	устанавливает правила именования файлов шаблона
	т.е. 'Иерархия шаблонов' это порядок подключения файлов шаблонов страниц
	
	Под "Иерархией" в данном случае понимаеться последовательная проверка:
		есть список файлов, зарегистрированных шаблонов
		проводиться последовательная проверка на их физ существование
		при нахождении файла проверка прекращаеться 
		найденный файл используеться в качестве шаблона

	Иерархию файлов можно изменить через динамические фильтры:
		(type)_template_hierarchy
		(type)_template
		и др.
	не участвуют в еирархии:
		sidebar.php
		header.php 
		и т.п.
	functions.php - всегда подключается автоматически при загрузке темы

Цыкл Вордпресс - The Loop		https://wp-kama.ru/id_119/the-loop.html
	задача этого цыкла это перебор записей 

	цель перебора -- вывод информации из записи на текущую страницу сайта
		при этом:
			внешний вид определяеться вёрсткой страницы
			для получения той или иной информации из записи сущствуют специальные функции. Эти ф-ции используються только в цыкле по этому вызываются без параметров. т.е. они обрабатывают только текущую запись.
	способ перебора:
		одной из специальных ф-ций формируеться массив, выборка, записей из таблицы "posts" базы данных. У каждой ф-ции есть массив параметров указание которых позволяет очень гибко настраивать выборку записей.
		перебором этого массива и занимается цыкл вордпресса

	Не каждый перебор массива записей будет "Цыклом Вордпресс"!!!
	т.е. ф-ции цыкла будут работать не всегда!
	для того что бы цыкл стал "The Loop" иногда нужна ф-ция setup_postdata().

	вся информация о текущем посте храниться в переменной $post

	Способы создания цыкла:
		have_posts() -- стандартный цыкл
			используется для формирования базовых страниц WP (категории, метки, архивы по дате)
			отдельный запрос на выборку из БД не нужен 
			т.к. вордпресс автоматически добавляет данные в переменную $wp_query в соответствии с тем, на какой странице мы сейчас находимся. т.е. на главной странице или странице рубрик, данные будут разные.
		get_posts() -- произвольный (дополнительный) цыкл
		 	Самый удобный и безопастный способ организовать цыкл
		 	Получает записи (посты, страницы, вложения) из базы данных по указанным критериям. Можно выбрать любые посты и отсортировать их как угодно.

		 	НЕОБХОДИМО:
		 		в начале цыкла:
		 			вызвать setup_postdata(). Она заполняет глобальные переменные, которые нужны для корректной работы некоторых Тегов Шаблона, которые используются внутри Цикла WordPress.
		 		после цыкла:
		 			wp_reset_query(); // сброс запроса т.к. нужно чтобы $post всегда содержала данные текущего поста страницы
		 			эта ф-ция возвращает глобальную переменную $post в правильное состояние: в соответствие с текущим.
		wp_query() -- произвольный (дополнительный) цыкл
			Используеться для 
				вывода записей никак не связанных со страницей
				создания множественных (дополнительных) циклов
				получения данных из записей и о записях для реализации разнообразного ф-ционала, проверок и т.п.
			Преимущество
				создаёться НОВЫЙ ОБЪЕКТ $query,
				который никак не связан с аналогичным глобальным объектом $wp_query
				поэтому мы никак не нарушаем структуру текущей страницы и 
				не влияем на роботу других ф-ций

		query_posts()-- произвольный (дополнительный) цыкл
			Использовать query_posts() опасно!!!
			т.к. эта ф-ция используется самим WP и вмешательство в её работу черевато непредсказуемыми багами т.к. на работе этой ф-ции базирують очень много других ф-ций
			Но все пораметры этой ф-ции могут быть использованы get_posts() и wp_query()

			Используеться ТОЛЬКО тогда когда нужно немного изменить ОСНОВНОЙ (базовый) запрос WordPress.
			Хотя для таких задач все же лучше использовать фильтр pre_get_posts. 








Меню
	


